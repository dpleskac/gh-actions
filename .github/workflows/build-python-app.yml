name: Build and Push Python Hello World Docker Image

on:
  push:
    branches:
      - main
    paths:
      - 'python-app/**' # Only trigger if changes are made in the python-app directory
      - '.github/workflows/build-python-app.yml' # Also trigger if the workflow itself changes
  workflow_dispatch:

env:
  IMAGE_NAME: python-app
  IMAGE_TAG: ${{ github.sha }}
  AWS_REGION: us-east-1
  ECR_REGISTRY: 461491260158.dkr.ecr.us-east-1.amazonaws.com
  ECR_REPOSITORY: gh-actions-test/python
  AWS_ROLE_ARN: arn:aws:iam::461491260158:role/gh-action-oidc-dpleskac-gh-actions

jobs:
  build-and-push:
    runs-on: ubuntu-latest
#    runs-on: self-hosted

    permissions:
      contents: read
      id-token: write # Required for OIDC

    steps:
      - name: Checkout repository code
        uses: actions/checkout@v4

      - name: Caller info
        run: |
          echo "Repository: ${{ github.repository }}"
          echo "Workflow: ${{ github.workflow }}"
          echo "Event Name: ${{ github.event_name }}"
          echo "SHA: ${{ github.sha }}"
          echo "Ref: ${{ github.ref }}"
          echo "Actor: ${{ github.actor }}"
          echo "Actor ID: ${{ github.actor_id }}"
          echo "Job workflow ref: ${{ github.job_workflow_ref }}"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./python-app
          push: false
          load: true
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          labels: |
            org.opencontainers.image.source=${{ github.event.repository.html_url }}
            org.opencontainers.image.created=${{ github.event.repository.pushed_at }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: List built images (for verification)
        run: docker images

      - name: Run Trivy vulnerability scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          format: 'table' # Output format (table, json, sarif, etc.)
          severity: 'CRITICAL,HIGH' # Only report critical and high severity vulnerabilities
          exit-code: '1' # Fail the workflow if vulnerabilities of specified severity are found
          ignore-unfixed: true # Only report vulnerabilities with a fix available

      - name: Run the application container to verify it works
        run: docker run --rm ${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Push docker image to ECR
        run: |
          docker tag ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
          docker push ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
         

